import re  # Импортируем модуль для работы с регулярными выражениями

def insert_words(input_file, output_file, sentence):
    # Открываем входной файл для чтения и выходной файл для записи
    with open(input_file, 'r', encoding='utf-8') as f_in, \
            open(output_file, 'w', encoding='utf-8') as f_out:
        text = f_in.read()  # Читаем весь текст из входного файла
        words = sentence.split()  # Разбиваем введенное предложение на отдельные слова
        word_index = 0  # Инициализируем индекс для отслеживания текущего слова из предложения
        result = []  # Создаем пустой список для хранения модифицированного текста

        # Регулярное выражение для поиска местоимений, включая случаи с пунктуацией
        pronoun_pattern = r'\b(я|ты|он|она|оно|мы|они|вы|тебя|вас|вам|твой|твоя|твоё|наш|наши|наша|наше)\b'

        # Функция для замены местоимений и добавления слов из предложения
        def replace_pronoun(match):
            nonlocal word_index  # Используем переменную из внешнего контекста
            pronoun = match.group(0)  # Получаем найденное местоимение
            result_str = pronoun  # Начинаем с добавления местоимения в результирующую строку

            # Если есть еще слова для добавления из предложения, добавляем их
            if word_index < len(words):
                result_str += ' ' + words[word_index]  # Добавляем слово после местоимения
                word_index += 1  # Переходим к следующему слову
            return result_str

        # Применяем функцию к тексту, заменяя местоимения
        modified_text = re.sub(pronoun_pattern, replace_pronoun, text, flags=re.IGNORECASE)

        # Записываем модифицированный текст в выходной файл
        f_out.write(modified_text)

# Указываем путь к входному файлу с текстом
input_file = '1Lab/input.txt'
# Указываем путь к выходному файлу для записи модифицированного текста
output_file = '1Lab/output.txt'
# Вводим предложение, слова из которого будут добавляться после местоимений
sentence = "Том ям с морепродуктами"

# Вызываем функцию для обработки текста
insert_words(input_file, output_file, sentence)